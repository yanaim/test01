<?xml version="1.0"?>
<doc>
    <assembly>
        <name>B2Com</name>
    </assembly>
    <members>
        <member name="T:B2.Com.clsAReport">
            <summary>
            ActiveReports設定クラス
            INIテーブルからLabel、TextBoxコントロールの位置やフォントなどを設定します
            </summary>
        </member>
        <member name="M:B2.Com.clsAReport.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:B2.Com.clsAReport.Dispose">
            <summary>
            オブジェクト解放
            </summary>
        </member>
        <member name="M:B2.Com.clsAReport.SetFontData(GrapeCity.ActiveReports.SectionReportModel.ARControl,System.String)">
            <summary>
            フォント設定
            フォント、ポイント、水平表示位置、色を設定します
            </summary>
            <param name="control">ActiveReportsコントロール</param>
            <param name="data">iniテーブルデータ</param>
        </member>
        <member name="M:B2.Com.clsAReport.SetLocationData(GrapeCity.ActiveReports.SectionReportModel.ARControl,System.String)">
            <summary>
            位置設定
            位置、サイズを設定します
            </summary>
            <param name="control">ActiveReportsコントロール</param>
            <param name="data">iniテーブルデータ</param>
        </member>
        <member name="T:B2.Com.PaperSize">
            <summary>
            用紙サイズクラス
            </summary>
        </member>
        <member name="M:B2.Com.PaperSize.GetPaperSize(System.String)">
            <summary>
            用紙サイズ取得
            </summary>
            <param name="size">用紙名</param>
            <returns>用紙サイズ</returns>
        </member>
        <member name="T:B2.Com.clsB2Com">
            <summary>
            共通クラス
            </summary>
        </member>
        <member name="F:B2.Com.clsB2Com.EXCD_START">
            <summary>起動</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.EXCD_EXIT">
            <summary>終了</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.EXCD_LOGIN">
            <summary>ログイン</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.EXCD_LOGOUT">
            <summary>ログアウト</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.EXCD_FAILED">
            <summary>認証失敗</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.EXCD_EXEC">
            <summary>別EXE起動</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.EXCD_UPDATE">
            <summary>更新</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.PostLib">
            <summary> postgreSQL接続クラスの定義 </summary>
        </member>
        <member name="M:B2.Com.clsB2Com.#ctor">
            
             <summary> 機能　　　: コンストラクタ                            </summary>
             <remark>  機能説明　: コンストラクタ                            </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.Finalize">
            <summary> 機能　　　: デストラクタ(IDispose)                    </summary>
            <remark>  機能説明　: デストラクタ(IDispose)                    </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.Dispose">
            
             <summary> 機能　　　: 解放処理</summary>
             
             <remark>  機能説明　: メモリ等の解放処理</remark>
        </member>
        <member name="M:B2.Com.clsB2Com.CommandParm(System.Int32)">
            <summary> プログラム引数　(該当ｲﾝﾃﾞｯｸｽの情報を取得：Index　0～）        </summary>
        </member>
        <member name="M:B2.Com.clsB2Com.msubInitDat">
            <summary> 機能　　　: 内部変数　クリア処理                          </summary>
            <remark>  機能説明　: 変数クリアを行ないます                        </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.gfncGetCommandLine">
            <summary> 機能　　　: コマンドライン情報取得処理                        </summary>
            <returns> 戻値      : bool                                              </returns>
            <remark>  機能説明　: コマンドライン情報を取得します                    </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.gfncInitialize(System.Boolean)">
            <summary> 機能　　　: 初期処理                              </summary>
            <remark>  機能説明　: 初期処理                              </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.gfncSetBackColor(System.Windows.Forms.Form)">
            <summary> 機能　　　: フォームのバックカラー設定処理                </summary>
            <remark>  機能説明　: フォームのバックカラー設定処理　　　　        </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.gfncSetAllControls(System.Windows.Forms.Control)">
            <summary> 機能　　　: 全コントロールの設定処理           </summary>
            <param name="pctrl">
                      引数      : 親コントロール                     </param>
            <returns> 戻値      : コントロールリスト                 </returns>
            <remark>  機能説明　: 全コントロールの設定処理           </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.gfncInitDb(System.Boolean)">
            <summary> 機能　　　: DB接続処理                                </summary>
            <remark>  機能説明　: DB接続処理                                </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.GetDbConectInfo">
            <summary> 機能　　　: DB接続情報の取得              </summary>
            <remark>  機能説明　: レジストリから取得            </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.GetColorIni">
            <summary> 機能　　　: COLOR情報の取得                            </summary>
        </member>
        <member name="M:B2.Com.clsB2Com.ConnectDB">
            <summary> 機能　　　: PHARMA DB接続                          </summary>
            <remark>  機能説明　: PHARMA DB接続                      </remark>
        </member>
        <member name="M:B2.Com.clsB2Com.ShowErrMsg(System.Exception)">
            <summary> 機能　　　: エラーメッセージ表示処理                          </summary>
            
            <param name="pexpErr">
                      引数　　　: (I) エラー内容                                    </param> 
            <returns> 戻値      : bool                                              </returns>
            
            <remark>  機能説明　: エラーメッセージを表示します                      </remark>
            
        </member>
        <member name="M:B2.Com.clsB2Com.ExecFraction(System.Decimal,System.Int32)">
            <summary>
            端数処理
            </summary>
            <param name="value">端数処理する値</param>
            <param name="div">端数処理区分(0：四捨五入 1：切捨て 2：切上げ)</param>
            <returns>端数処理済の値</returns>
        </member>
        <member name="M:B2.Com.clsB2Com.ExecFractionDb(System.Double,System.Int32)">
            <summary>
            端数処理
            </summary>
            <param name="value">端数処理する値</param>
            <param name="div">端数処理区分(0：四捨五入 1：切捨て 2：切上げ)</param>
            <returns>端数処理済の値</returns>
        </member>
        <member name="M:B2.Com.clsB2Com.WriteSysLog(System.String,System.String,System.String)">
            <summary> 
            ログ　出力
            </summary>
            <param name="bunruiCode">分類コード</param>
            <param name="loginCode">ログインID</param> 
            <param name="bikou">備考</param>
            <returns>成功したらTrue　エラーでFalse</returns>
            <remark>システムログ　出力</remark>
        </member>
        <member name="M:B2.Com.clsB2Com.GetINIData(System.String,System.String,System.String,System.String)">
            <summary>
            INI情報取得
            </summary>
            <param name="pgName">プログラム名</param>
            <param name="section">セクション名</param>
            <param name="key">キー名</param>
            <param name="def">デフォルト値</param>
            <returns>INIデータ</returns>
        </member>
        <member name="P:B2.Com.clsB2Com.DB_Server">
            <summary> [DB]サーバー名 </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.DB_Port">
            <summary> [DB]ポート番号 </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.DB_Database">
            <summary> [DB]データベース名 </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.DB_User">
            <summary> [DB]ユーザ名 </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.DB_Password">
            <summary> [DB]パスワード </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.DB_Schema">
            <summary> [DB]スキーマー </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.DB_HonbuUser">
            <summary> [DB]本部ユーザ名 </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.DB_HonbuPassword">
            <summary> [DB]本部パスワード </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.SS_Tenpo">
            <summary> [XX]店舗番号 </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.SS_HonbuTenpo">
            <summary> [XX]本部店舗番号 </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.PRGID">
            <summary> プログラムID </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.FormColorMode">
            <summary> フォームカラーモード (FROM_COLOR_MODEより設定取得) </summary>
        </member>
        <member name="P:B2.Com.clsB2Com.MachinNm">
            <summary> マシン名 </summary>
        </member>
        <member name="T:B2.Com.clsB2Com.FROM_COLOR_MODE">
            <summary>カラー設定情報</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.FROM_COLOR_MODE.NORMAL">
            <summary>通常設定カラー</summary>
        </member>
        <member name="F:B2.Com.clsB2Com.FROM_COLOR_MODE.TERMA">
            <summary>テーマカラー</summary>
        </member>
        <member name="T:B2.Com.clsIme">
            <summary>
            IMEコントロールクラス
            </summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_NATIVE">
            <summary>入力モード値　日本語</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_ALPHANUMERIC">
            <summary>入力モード値　半角英数</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_JAPANESE">
            <summary>入力モード値　日本語</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_KATAKANA">
            <summary>入力モード値　カタカナ</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_LANGUAGE">
            <summary>入力モード値　半角カタカナ</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_FULLSHAPE">
            <summary>入力モード値　全角</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_ROMAN">
            <summary>入力モード値　ローマ字入力</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_CHARCODE">
            <summary>入力モード値　文字コード入力</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_HANJACONVERT">
            <summary>入力モード値　HANJA変換モード</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_SOFTKBD">
            <summary>入力モード値　ソフトキーボード</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_NOCONVERSION">
            <summary>入力モード値　変換しない</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_EUDC">
            <summary>入力モード値　EUDC変換モード</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_SYMBOL">
            <summary>入力モード値　</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_CMODE_FIXED">
            <summary>入力モード値　</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_SMODE_NONE">
            <summary>変換モード値　無変換</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_SMODE_PLAURALCLAUSE">
            <summary>変換モード値　人名/地名</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_SMODE_SINGLECONVERT">
            <summary>変換モード値　単漢字変換する</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_SMODE_AUTOMATIC">
            <summary>変換モード値　自動モード</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_SMODE_PHRASEPREDICT">
            <summary>変換モード値　一般</summary>
        </member>
        <member name="F:B2.Com.clsIme.IME_SMODE_CONVERSATION">
            <summary>変換モード値　話し言葉</summary>
        </member>
        <member name="M:B2.Com.clsIme.ImmGetDefaultIMEWnd(System.IntPtr)">
            <summary>
            IME クラスの既定のウィンドウハンドルを取得します
            </summary>
            <param name="hWnd">アプリケーションのウィンドウハンドル</param>
            <returns>IMEウィンドウハンドル</returns>
        </member>
        <member name="M:B2.Com.clsIme.ImmGetContext(System.IntPtr)">
            <summary>
            指定されたウィンドウに関連付けられている入力コンテキストを取得します
            </summary>
            <param name="hWnd">関連付けられている入力コンテキストを取得するウィンドウのハンドル</param>
            <returns>入力コンテキストのハンドル</returns>
        </member>
        <member name="M:B2.Com.clsIme.ImmReleaseContext(System.IntPtr,System.IntPtr)">
            <summary>
            入力コンテキストを解放します
            </summary>
            <param name="hWnd">入力コンテキストを取得するために ImmGetContext 関数を呼び出したときに指定したウィンドウハンドル</param>
            <param name="hImc">入力コンテキストのハンドル</param>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsIme.ImmSetConversionStatus(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            現在の変換状態を設定します
            </summary>
            <param name="hImc">入力コンテキストのハンドル</param>
            <param name="fdwConversion">入力モードの値</param>
            <param name="fdwSentence">変換モードの値</param>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsIme.ImmGetConversionStatus(System.IntPtr,System.UInt32@,System.UInt32@)">
            <summary>
            現在の変換状態を取得しま
            </summary>
            <param name="hImc">入力コンテキストのハンドル</param>
            <param name="fdwConversion">入力モード値</param>
            <param name="fdwSentence">変換モードの値</param>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsIme.SetIMEConversionStatus(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            IMEモード設定
            </summary>
            <param name="hWnd">ウィンドウハンドル</param>
            <param name="dwConversion">入力モード</param>
            <param name="dwSentence">変換モード</param>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsIme.GetIMEConversionStatus(System.IntPtr,System.UInt32@,System.UInt32@)">
            <summary>
            IMEモード取得
            </summary>
            <param name="hWnd">ウィンドウハンドル</param>
            <param name="dwConversion">入力モード</param>
            <param name="dwSentence">変換モード</param>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsRegistry.GetRegistry(System.String,System.String)">
            <summary>
            レジストリ値取得処理
            </summary>
            <param name="RegKey">値を取得するレジストリキー名</param> 
            <param name="RegValueName">値を取得する値名</param> 
            <remark>レジストリから値をします</remark>
        </member>
        <member name="M:B2.Com.clsRegistry.SetRegistry(System.String,System.String,System.String)">
            
             <summary>
             レジストリ値設定処理
             </summary>
             <param name="RegKey">値を設定するレジストリキー名</param> 
             <param name="RegValueName">設定する値名</param> 
             <param name="SetValue">設定する値</param> 
             <remark>レジストリに値を設定します</remark>
        </member>
        <member name="M:B2.Com.clsRegistry.DeleteRegistry(System.String)">
            <summary>
            レジストリ値削除
            </summary>
            <param name="DelRegKey">削除する値があるレジストリキー名</param>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.DataTableToCsv(System.Data.DataTable)">
            <summary>
            DataTable→CSV出力文字変換
            </summary>
            <param name="lobjDataTable">DataTable</param>
            <returns>CSV出力文字</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.InitDatarow(System.Data.DataRow@)">
            <summary>
            DataRow初期化
            </summary>
            <remarks>
            全項目に""もしくは0を設定する
            </remarks>
            <param name="pRow">DataRow</param>
            <returns>true:正常 false:異常</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.InvalidFileNameConv(System.String)">
            <summary>
            ファイル名称使用不可文字変換
            </summary>
            <remarks>
            ファイル名に使用不可な文字を全角文字に変換
            </remarks>
            <param name="pstrFileName">ファイル(フォルダ)名称</param>
            <returns>ファイル(フォルダ)名称</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToDatarow(Npgsql.NpgsqlDataReader,System.Data.DataRow@)">
            <summary>
            NpgsqlDataReader→DataRow変換
            </summary>
            <param name="pOraDSRead">OracleDataReader</param>
            <param name="pRow">DataRow</param>
            <returns>true:正常 false:異常</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToSightDate(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            予定日(yyyyMMdd)取得
            </summary>
            <param name="pdecBASE_DATE">基準日(yyyyMMdd)</param>
            <param name="pdecDEADLINE_DAY">締め日(dd)</param>
            <param name="pdecSIGHT_DAY">予定日(dd)</param>
            <param name="pdecSIGHT">サイト日数</param>
            <returns>予定日(yyyyMMdd)</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToString(System.Data.DataRow,System.String)">
            <summary>
            DataRow→string変換
            </summary>
            <remarks>
            データが"0"の場合は""とする
            </remarks>
            <param name="pobjDataRow">DataRowデータ</param>
            <param name="pstrColumnName">Column名称</param>
            <returns>stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToString(System.Object)">
            <summary>
            object→string変換
            </summary>
            <remarks>
            データが"0"の場合は""とする
            </remarks>
            <param name="pobjData">objectデータ</param>
            <returns>stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToString(System.String)">
            <summary>
            string→string変換
            </summary>
            <remarks>
            データが"0"の場合は""とする
            </remarks>
            <param name="pstrData">objectデータ</param>
            <returns>stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToString1000Separator(System.Data.DataRow,System.String)">
            <summary>
            DataRow→"#,0"形式string変換
            </summary>
            <remarks>
            データが"0"の場合・数値以外の場合は""とする
            </remarks>
            <param name="pobjDataRow">DataRowデータ</param>
            <param name="pstrColumnName">Column名称</param>
            <returns>"#,0"形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToString1000Separator(System.Object)">
            <summary>
            object→"#,0"形式string変換
            </summary>
            <remarks>
            データが"0"の場合・数値以外の場合は""とする
            </remarks>
            <param name="pstrData">objectデータ</param>
            <returns>"#,0"形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToString1000Separator(System.String)">
            <summary>
            object→"#,0"形式string変換
            </summary>
            <remarks>
            データが"0"の場合・数値以外の場合は""とする
            </remarks>
            <param name="pobjData">objectデータ</param>
            <returns>"#,0"形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToStringDate(System.Data.DataRow,System.String)">
            <summary>
            DataRow→"yyyy/MM/dd"形式string変換
            </summary>
            <remarks>
            データが"0"の場合は""とする
            </remarks>
            <param name="pobjDataRow">DataRowデータ</param>
            <param name="pstrColumnName">Column名称</param>
            <returns>"yyyy/MM/dd"形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToStringDate(System.Object)">
            <summary>
            object→"yyyy/MM/dd"形式string変換
            </summary>
            <remarks>
            データが"0"の場合は""とする
            </remarks>
            <param name="pobjData">objectデータ</param>
            <returns>"yyyy/MM/dd"形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToStringDate(System.String)">
            <summary>
            string→"yyyy/MM/dd"形式string変換
            </summary>
            <remarks>
            データが"0"の場合は""とする
            </remarks>
            <param name="pstrData">stringデータ</param>
            <returns>"yyyy/MM/dd"形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToStringSql(System.Data.DataRow,System.String)">
            <summary>
            DataRow→SQL対応string変換
            </summary>
            <param name="pobjDataRow">DataRowデータ</param>
            <param name="pstrColumnName">Column名称</param>
            <returns>SQL形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToStringSql(System.Object)">
            <summary>
            object→SQL対応string変換
            </summary>
            <param name="pstrData">objectデータ</param>
            <returns>SQL形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.ToStringSql(System.String)">
            <summary>
            string→SQL対応string変換
            </summary>
            <param name="pobjData">objectデータ</param>
            <returns>SQL形式stringデータ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.TypeConv(System.String,System.Type)">
            <summary>
            型変換
            </summary>
            <param name="pstrData">文字情報</param>
            <param name="pobjType">型情報</param>
            <returns>型変換後データ</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.XmlToDatarow(System.String,System.Data.DataRow@)">
            <summary>
            Xml→DataRow変換
            </summary>
            <param name="pstrXml">Xml</param>
            <param name="pRow">DataRow</param>
            <returns>true:正常 false:異常</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.mfnc_ToString(System.Object)">
            <summary>
            文字変換
            </summary>
            <remarks>
            null等、変換に例外が発生する場合は""とする
            </remarks>
            <param name="pobjData">変換前データ</param>
            <returns>文字列</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.mfnc_EncloseDoubleQuotesIfNeed(System.String)">
            <summary>
            必要ならば、文字列をダブルクォートで囲む
            </summary>
            <param name="pstrField">対象文字列</param>
            <returns>変換後文字列</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.mfnc_EncloseDoubleQuotes(System.String)">
            <summary>
            文字列をダブルクォートで囲む
            </summary>
            <param name="pstrField">対象文字列</param>
            <returns>変換後文字列</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.mfnc_NeedEncloseDoubleQuotes(System.String)">
            <summary>
            文字列をダブルクォートで囲む必要があるか調べる
            </summary>
            <param name="pstrField">対象文字列</param>
            <returns>true:必要 false:不要</returns>
        </member>
        <member name="M:B2.Com.clsCnvStr.mfnc_getDateTime(System.Int32,System.Int32,System.Int32)">
            <summary>
            DateTime型データ取得
            </summary>
            <remarks>
            new DateTime(year,month,day)と異なる点は month が 1 未満であるか、12 を超えている。または day が 1 未満か、month の月の日数よりも大きい値でも例外を生じさせず対応する
            </remarks>
            <param name="pintYear">年</param>
            <param name="pintMonth">月</param>
            <param name="pintDay">日</param>
            <returns>DateTime型データ</returns>
        </member>
        <member name="T:B2.Com.clsContrlColor">
            <summary>  ****************************************************************************
            
                ファイル名　　 : clsContrlColor.cs
                説明           : カラーコントロール  クラス
                                  ＜Public処理＞
            　　　　　　　　　　　SetFormStyle()        : フォーム      スタイル 
                                  SetBtnStyle()         : ボタン        スタイル
                                  SetLblStyle()         : ラベル        スタイル
                                  SetPanelStyle()       : パネル        スタイル
                                  SetSpreadStyle()      : スプレッド　  スタイル
            　　　　　　　　　　　SetSpreadNamedStyle() : スプレッドNamedStyle　　　　
                                  SetCheckFlatStyle()   : チェックボックス(FLAT)
                                  SetRadioFlatStyle()   : ラジオボタン(FLAT)
                                  SetNormalTehmaStyle() : 共通コントロール
                                　SetNameTextStyle()    : 入力←→表示　テキストスタイル
                                  
            
                修正履歴　　　 : 
            
            </summary> ****************************************************************************
        </member>
        <member name="M:B2.Com.clsContrlColor.SetFormStyle(System.Windows.Forms.Control)">
            <summary> 機能　　　: フォームスタイル設定　                              </summary>
            
            
            <remark>  機能説明　: フォームスタイル変更                                </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.mfncGetAllControls(System.Windows.Forms.Control)">
            <summary> 機能　　　: 全コントロールリスト取得処理                      </summary>
            
            <param name="pctrl">
                      引数      : 親コントロール                                      </param>
            
            <returns> 戻値      : コントロールリスト                                </returns>
            
            <remark>  機能説明　: 全コントロールリスト取得処理                      </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetBtnStyle(System.Windows.Forms.Button,B2.Com.clsContrlColor.STYLE_BTN)">
            <summary> 機能　　　: ボタンスタイル設定　                              </summary>
            <remark>  機能説明　: ボタンスタイル変更                                </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.msubSetBtnColor(System.Windows.Forms.Button,B2.Com.clsContrlColor.STYLE_BTN)">
            <summary> 機能　　　: ボタンスタイル カラー設定（Enabledによる切替）    </summary>
            <remark>  機能説明　: ボタンスタイル カラー設定（Enabledによる切替）    </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.btnNormalColor_EnabledChanged(System.Object,System.EventArgs)">
            <summary> 機能　　　: [イベント] カラーボタン　Enabled変更時処理     </summary>
            <remark>  機能説明　: バックカラー変更                               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.btnThemaColor_EnabledChanged(System.Object,System.EventArgs)">
            <summary> 機能　　　: [イベント] カラーボタン　Enabled変更時処理     </summary>
            <remark>  機能説明　: バックカラー変更                               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetLblStyle(System.Windows.Forms.Label,B2.Com.clsContrlColor.STYLE_LBL)">
            <summary> 機能　　　: ラベルコントロール　スタイル設定              </summary>
            <remark>  機能説明　: ラベルコントロール　スタイル変更               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetPanelStyle(System.Windows.Forms.Panel)">
            <summary> 機能　　　: パネルコントロール　スタイル設定              </summary>
            <remark>  機能説明　: パネルコントロール　スタイル変更               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetSpreadStyle(FarPoint.Win.Spread.FpSpread)">
            <summary> 機能　　　: スプレッドコントロール　スタイル設定              </summary>
            <remark>  機能説明　: スプレッドコントロール　スタイル変更               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetSpreadStyle(FarPoint.Win.Spread.FpSpread,System.Boolean)">
            <summary> 機能　　　: スプレッドコントロール　スタイル設定              </summary>
            <param name="pobjSpd">
                      引数　　　: (I) スプレットシートコンポーネント
            </param>
            <param name="pblnBorderSingle">
                      引数　　　: (I) シングル枠（TRUE:シングル、FALSE:枠なし)
            </param>
            <remark>  機能説明　: スプレッドコントロール　スタイル変更               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetSpreadNamedStyle(FarPoint.Win.Spread.NamedStyleCollection,System.String,B2.Com.clsContrlColor.SPREAD_NAMESTYLE)">
            <summary> 機能　　　: スプレッドNamedStyle　スタイル設定              </summary>
            <remark>  機能説明　: スプレッドNamedStyle　スタイル変更               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetCheckFlatStyle(System.Windows.Forms.CheckBox)">
            <summary> 機能　　　: チェックボックス　スタイル設定              </summary>
            <remark>  機能説明　: チェックボックス　スタイル変更               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.msubSetCheckFlatColor(System.Windows.Forms.CheckBox)">
            <summary> 機能　　　: チェックボックス　カラー設定(CheckON/OFF切替)   </summary>
            <remark>  機能説明　: チェックボックス　カラー設定(CheckON/OFF切替)   </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.CheckFlat_CheckedChanged(System.Object,System.EventArgs)">
            <summary> 機能　　　: チェックボックス　チェック値変更時処理        </summary>
            <remark>  機能説明　: チェックボックス　チェック値変更時処理        </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetRadioFlatStyle(System.Windows.Forms.RadioButton)">
            <summary> 機能　　　: ラジオボタンコントロー　スタイル設定              </summary>
            <remark>  機能説明　: ラジオボタンコントロー　スタイル変更               </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.msubSetRadioFlatColor(System.Windows.Forms.RadioButton)">
            <summary> 機能　　　: ラジオボタンコントロー　カラー設定(CheckON/OFF切替)   </summary>
            <remark>  機能説明　: ラジオボタンコントロー　カラー設定(CheckON/OFF切替)   </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.ComRadio_CheckedChanged(System.Object,System.EventArgs)">
            <summary> 機能　　　: ラジオボタン　チェック値変更時処理        </summary>
            <remark>  機能説明　: ラジオボタン　チェック値変更時処理        </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetNormalTehmaStyle(System.Windows.Forms.Control)">
            <summary> 機能　　　: 通常強調コントロール　スタイル設定         </summary>
            <remark>  機能説明　: 通常強調コントロール　スタイル変更         </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.SetNameTextStyle(System.Windows.Forms.TextBox)">
            <summary> 機能　　　: 入力←→表示　テキストスタイル設定　               　</summary>
            <remark>  機能説明　: テキストスタイル変更                                </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.msubSetNameTextColor(System.Windows.Forms.TextBox)">
            <summary> 機能　　　: 入力←→表示　カラー設定(ReadOnlyによる切替)  </summary>
            <remark>  機能説明　: カラー設定(ReadOnlyによる切替)                </remark>
        </member>
        <member name="M:B2.Com.clsContrlColor.txtName_ReadOnlyChanged(System.Object,System.EventArgs)">
            <summary> 機能　　　: [イベント] テキストスタイル　ReadOnly変更時処理     </summary>
            <remark>  機能説明　: カラー変更                               </remark>
        </member>
        <member name="P:B2.Com.clsContrlColor.CNST_COLOR_THEMA_NORMAL">
            <summary>通常</summary>
        </member>
        <member name="P:B2.Com.clsContrlColor.CNST_COLOR_THEMA_DARK_DARK">
            <summary>濃い濃い</summary>
        </member>
        <member name="P:B2.Com.clsContrlColor.CNST_COLOR_THEMA_DARK">
            <summary>濃い</summary>
        </member>
        <member name="P:B2.Com.clsContrlColor.CNST_COLOR_THEMA_LIGHT">
            <summary>薄い</summary>
        </member>
        <member name="P:B2.Com.clsContrlColor.CNST_COLOR_THEMA_LIGHT_LIGHT">
            <summary>薄い薄い</summary>
        </member>
        <member name="P:B2.Com.clsContrlColor.CNST_COLOR_CONTROL">
            <summary>コントロールカラー</summary>
        </member>
        <member name="T:B2.Com.clsContrlColor.STYLE_BTN">
            <summary>ボタンスタイル</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_BTN.TYPE_NORMAL">
            <summary>通常ボタン </summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_BTN.TYPE_TERMA_COLOR">
            <summary>カラー設定ボタン </summary>
        </member>
        <member name="T:B2.Com.clsContrlColor.STYLE_LBL">
            <summary>ラベルスタイル</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_LBL.TYPE_FROM_TITEL">
            <summary>フォームタイトル               (BK:テーマカラー、字：白)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_LBL.TYPE_FRBK_TITEL">
            <summary>強調タイトル                   (BK:テーマカラー、字：白)</summary>    
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_LBL.TYPE_FRBK_TITEL_LIGHT">
            <summary>強調タイトル(薄い              (BK:薄いテーマカラー、字：黒)</summary>  
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_LBL.TYPE_DAT_LIGHT">
            <summary>明るい項目カラー(通常カラー)   (BK:白系、字：テーマカラー)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_LBL.TYPE_DAT_NORMAL">
            <summary>通常項目カラー(濃いカラー)     (BK:白系、字：濃いテーマカラー)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_LBL.TYPE_DAT_DARK">
            <summary>濃い項目カラー(濃い濃いカラー) (BK:白系、字：濃い×２テーマカラー)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_LBL.TYPE_INPUT_TITEL">
            <summary>入力データ 項目名              (BK:白系、字：濃い×２テーマカラー)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.STYLE_LBL.TYPE_INPUT_CDNAME">
            <summary>入力データ 名称                (BK:白系、字：濃いテーマカラー)</summary>
        </member>
        <member name="T:B2.Com.clsContrlColor.SPREAD_NAMESTYLE">
            <summary>スプレッドNamedStyleスタイル</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.SPREAD_NAMESTYLE.TYPE_NS_HEADER">
            <summary>ヘッダカラー               (BK:白系、字：濃い×２テーマカラー))</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.SPREAD_NAMESTYLE.TYPE_NS_TITEL">
            <summary>タイトル                   (BK:テーマカラー、字：白)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.SPREAD_NAMESTYLE.TYPE_NS_FRBK_TITEL_LIGHT">
            <summary>タイトル文字黒（明るい）   (BK:薄いテーマカラー，字：黒)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.SPREAD_NAMESTYLE.TYPE_NS_NORMAL">
            <summary>通常ラベル(文字黒)         (BK:白、字:黒)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.SPREAD_NAMESTYLE.TYPE_NS_IN_TITEL">
            <summary>入力項目タイトル           (BK:白、字:濃い×２テーマカラー)</summary>
        </member>
        <member name="F:B2.Com.clsContrlColor.SPREAD_NAMESTYLE.TYPE_NS_CDNAME">
            <summary>名称ラベル                 (BK:白、字:濃いテーマカラー)</summary>
        </member>
        <member name="M:B2.Com.clsHidukeLib.#ctor">
            <summary> 機能　　　: GENGO.INIの取得</summary>
            <remark>  機能説明　: GENGO.INIの取得</remark>
        </member>
        <member name="M:B2.Com.clsHidukeLib.ConvDate(System.String,System.Int32,System.String,System.String)">
            <summary> 機能　　　: 日付の変換</summary>
            <param name="pstrinDate">(I)入力日付(有効日付であれば和暦西暦両方可) </param> 
            <param name="pintretFormatType">(I) 返す日付のフォーマット 0:西暦 1:和暦 2:和暦略 3:和暦英略 4:年月日付き和暦</param> 
            <param name="pstrseparateChar">(I) 区切り文字</param>
            <param name="pstrDefDate">(I) 基準日（ﾌﾞﾗﾝｸの場合、ｼｽﾃﾑ日付）</param>
            <remark>  機能説明　: 日付の変換</remark>
        </member>
        <member name="M:B2.Com.clsHidukeLib.ConvDate(System.String)">
            <summary>
            日付変換（西暦変換、区切り文字なし）
            </summary>
            <param name="pstrinDate">入力日付</param>
            <returns>日付文字列</returns>
        </member>
        <member name="M:B2.Com.clsHidukeLib.ConvDate(System.String,System.Int32)">
            <summary>
            日付変換
            </summary>
            <param name="pstrinDate">入力日付</param>
            <param name="pintretFormatType">変換区分(0:西暦 1:和暦 2:和暦略 3:和暦英略 4:年月日付き和暦)</param>
            <returns>日付文字列</returns>
        </member>
        <member name="M:B2.Com.clsHidukeLib.ConvDate(System.String,System.String)">
            <summary>
            日付変換（西暦変換）
            </summary>
            <param name="pstrinDate">入力日付</param>
            <param name="pstrseparateChar">区切り文字</param>
            <returns>日付文字列</returns>
        </member>
        <member name="M:B2.Com.clsHidukeLib.ConvDate(System.String,System.Int32,System.String)">
            <summary>
            日付変換
            </summary>
            <param name="pstrinDate">入力日付</param>
            <param name="pintretFormatType">変換区分(0:西暦 1:和暦 2:和暦略 3:和暦英略 4:年月日付き和暦)</param>
            <param name="pstrseparateChar">区切り文字(変換区分が4のときは無効)</param>
            <returns>日付文字列</returns>
        </member>
        <member name="M:B2.Com.clsHidukeLib.GetGengo(System.String)">
            
             <summary> 機能　　　: 元号情報該当No　取得処理                      </summary>
             
             <remark>  機能説明　: 元号情報該当No　取得処理                    </remark>
        </member>
        <member name="M:B2.Com.clsHidukeLib.IsDateW(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定文字列(和暦)の日付チェック</summary>
            <param name="pstrDateW">
                チェック文字列</param>
            <returns>
                指定文字列の日付チェックを行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.clsHidukeLib.GetAlphabetEra(System.DateTime)">
            <summary>
            英字元号取得
            </summary>
            <param name="date">日付</param>
            <returns>英字元号(H：平成etc)</returns>
        </member>
        <member name="F:clsIniFile.BUFF_LEN">
            <summary>
            * DEFINE
            </summary>
        </member>
        <member name="M:clsIniFile.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.UInt32,System.String)">
            <summary>
            API宣言
            * iniﾌｧｲﾙ読込み関数宣言
            </summary>
        </member>
        <member name="M:clsIniFile.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            API宣言
            * iniﾌｧｲﾙ書込み関数宣言
            </summary>
        </member>
        <member name="M:clsIniFile.#ctor(System.String)">
            インスタンス作成
            * 引数 : iniファイルのフルパス
        </member>
        <member name="M:clsIniFile.Close">
            リソースを手動で開放
        </member>
        <member name="M:clsIniFile.GetIniString(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="lpszSection"></param>
            <param name="lpszEntry"></param>
            <param name="lpszDefault"></param>
            <returns></returns>
        </member>
        <member name="M:clsIniFile.GetIniString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="lpszSection"></param>
            <param name="lpszEntry"></param>
            <returns></returns>
        </member>
        <member name="M:clsIniFile.SetIniString(System.String,System.String,System.String)">
            <summary>
            Set ini String情報 (iniファイル情報書込メソッド)
            </summary>
            <param name="lpszSection"></param>
            <param name="lpszEntry"></param>
            <param name="lpszString"></param>
            <returns></returns>
        </member>
        <member name="T:B2.Com.clsPostgre">
            <summary>
            PostgreSQL 操作用クラス
            </summary>
        </member>
        <member name="F:B2.Com.clsPostgre.disposed">
            <summary>破棄状況(true：破棄済み false：破棄されていない)</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Session">
            <summary>接続情報</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Command">
            <summary>実行コマンド情報</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Trans">
            <summary>トランザクション情報</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_UserName">
            <summary>接続ユーザ名:ROLE NAME</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Password">
            <summary>接続パスワード</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Database">
            <summary>接続先データベース</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Server">
            <summary>接続先サーバー名</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Port">
            <summary>接続先サポート番号</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Schema">
            <summary>接続先スキーマ</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_Pooling">
            <summary>プーリング区分(true：接続のプーリングをする false：しない)</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_SQL">
            <summary>SQL文字列</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_IsConnection">
            <summary>接続状況(true：接続中 false：未接続)</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_IsBeginTrans">
            <summary>トランザクション状況(true：トランザクション中 false：それ以外)</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_LastErrorCode">
            <summary>Oracleエラーコード</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.PG_LastError">
            <summary>Oracleエラーメッセージ</summary>
        </member>
        <member name="F:B2.Com.clsPostgre.retryCount">
            <summary>リトライ回数</summary>
        </member>
        <member name="M:B2.Com.clsPostgre.#ctor">
            <summary>
            ★コンストラクタ
            </summary>
        </member>
        <member name="M:B2.Com.clsPostgre.Finalize">
            <summary>
            ★デストラクタ
            </summary>
        </member>
        <member name="M:B2.Com.clsPostgre.Dispose">
            <summary>
            解放処理
            </summary>
        </member>
        <member name="M:B2.Com.clsPostgre.Connect(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            ★PostgreSQL接続
            </summary>
            <param name="userName">ユーザ名</param>
            <param name="password">パスワード</param>
            <param name="database">データベース</param>
            <param name="schema">スキーマ</param>
            <param name="pooling">接続プーリング区分(true：接続プーリングする false：しない)</param>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.Connect">
            <summary>
            ★Oracle接続
            ユーザ名などはINIファイルを参照
            </summary>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.Connect(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            ★Oracke接続
            接続プーリングを使用して接続する
            </summary>
            <param name="userName">ユーザ名</param>
            <param name="password">パスワード</param>
            <param name="database">データベース</param>
            <param name="schema">スキーマ</param>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.DisConnect">
            <summary>
            ★切断
            </summary>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.SelectSQL_NoCache(System.String)">
            <summary>
            ★Select(接続型)
            </summary>
            <param name="selectSQL">SQL文字列</param>
            <returns>データリーダオブジェクト(エラーのときはnull)</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.SelectSQL_NoCache">
            <summary>
            ★Select(接続型)
            SQLに設定されたSQL文字列を実行
            </summary>
            <returns>データリーダオブジェクト(エラーのときはnull)</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.SelectSQL(System.String)">
            <summary>
            ★Select(非接続型)
            </summary>
            <param name="selectSQL">SQL文字列</param>
            <returns>データアダプタオブジェクト(エラーのときはnull)</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.SelectSQL">
            <summary>
            ★Select(非接続型)
            SQLに設定されたSQL文字列を実行
            </summary>
            <returns>データアダプタオブジェクト(エラーのときはnull)</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.ExecuteSQL(System.String)">
            <summary>
            ★SQL実行(接続型)
            </summary>
            <param name="execSQL">SQL文字列</param>
            <returns>処理件数(エラーのときは-1)</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.ExecuteSQL">
            <summary>
            ★SQL実行(接続型)
            SQLに設定されたSQL文字列を実行
            </summary>
            <returns>処理件数(エラーのときは-1)</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.ExecuteSQLNoErr(System.String)">
            <summary>
            ★SQL実行(接続型) エラーメッセージを表示しないでthrowする。
            </summary>
            <param name="execSQL">SQL文字列</param>
            <returns>処理件数(エラーのときは-1)</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.BeginTransaction">
            <summary>
            ★トランザクションの開始
            </summary>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.CommitTransaction">
            <summary>
            ★コミット
            </summary>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.RollbackTransaction">
            <summary>
            ★ロールバック
            </summary>
            <returns>true：正常終了 false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.LastErrorClear">
            <summary>
            ★エラーのクリア
            </summary>
        </member>
        <member name="M:B2.Com.clsPostgre.SQLClear">
            <summary>
            ★SQLのクリア
            </summary>
        </member>
        <member name="M:B2.Com.clsPostgre.ShowPgErrMsg(System.Exception)">
            <summary>
            エラーメッセージ表示処理
            </summary>
            <param name="pexpErr">エラー内容</param> 
            <remark>エラーメッセージを表示します</remark>
        </member>
        <member name="M:B2.Com.clsPostgre.IsConnectError">
            <summary>
            接続エラー判定
            </summary>
            <returns>true：接続エラー false：それ以外</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.IsConnectError(System.String)">
            <summary>
            接続エラー判定
            </summary>
            <param name="errMsg">エラーメッセージ</param>
            <returns>true：接続エラー false：それ以外</returns>
        </member>
        <member name="M:B2.Com.clsPostgre.WriteSysLog(System.String,System.String,System.String)">
            <summary> 
            システムログ　出力
            </summary>
            <param name="pstrBunruiCD">分類コード</param>
            <param name="pstrLoginID">ログインID</param> 
            <param name="pstrBIKO">備考</param>
            <returns>成功したらTrue　エラーでFalse</returns>
            <remark>システムログ　出力</remark>
        </member>
        <member name="P:B2.Com.clsPostgre.UserName">
            <summary>★接続ユーザ名</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.Password">
            <summary>★接続パスワード</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.Database">
            <summary>★接続先データベース</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.Server">
            <summary>★接続先サーバ</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.Port">
            <summary>★接続先ポート番号</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.Pooling">
            <summary>★接続先データベース</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.Schema">
            <summary>★接続先スキーマ</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.SQL">
            <summary>★SQL文字列</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.RetryCount">
            <summary>リトライ回数</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.IsConnect">
            <summary>★接続状況表示</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.LastErrorCode">
            <summary>★最後に起きたエラーコード</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.LastError">
            <summary>★最後に起きたエラー</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.Session">
            <summary>ORACLEコネクション</summary>
        </member>
        <member name="P:B2.Com.clsPostgre.Command">
            <summary>ORALCEコマンド</summary>
        </member>
        <member name="F:B2.Com.fspColumdata.colum_position">
            <summary>
            列位置
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.colum_width_size">
            <summary>
            列幅サイズ
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.colum_label">
            <summary>
            列のラベル名
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.hyouji_umu">
            <summary>
            列の表示有無 true:表示  false:非表示
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.font_name">
            <summary>
            セルのフォント名
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.font_size">
            <summary>
            セルのフォントサイズ
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.suicyoku_ichi">
            <summary>
            セルの垂直表示位置　0:上 1:下　2:中央
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.suihei_ichi">
            <summary>
            セルの水平表示位置　0:左 1:右　2:中央
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.cellType">
            <summary>
            セルの属性　0:ﾃｷｽﾄ 1:数値 2:通貨 3:ﾊﾟｰｾﾝﾄ 4:ﾘｯﾁﾃｷｽﾄ 5:ﾁｪｯｸﾎﾞｯｸｽ 6:ｺﾝﾎﾞﾎﾞｯｸｽ 7:日付 8:ﾘｽﾄﾎﾞｯｸｽ 9:ﾎﾞﾀﾝ
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.ketasu">
            <summary>
            桁数(テキストの時は文字数）
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.syousuu">
            <summary>
            小数点以下桁数（数値の時）
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.ketakugiri">
            <summary>
            数値の時　true:3桁区切りあり　false:3桁区切り無し
            </summary>
        </member>
        <member name="F:B2.Com.fspColumdata.orikaeshi">
            <summary>
            テキストの時　true:折り返しあり　false：折り返し無し
            </summary>
        </member>
        <member name="M:B2.Com.fspColumdata.#ctor">
            <summary>
            コンストラクタ
            引数なし　初期化します。
            </summary>
        </member>
        <member name="T:B2.Com.clsSpread">
            <summary>
            スプレッド  共通関数
            </summary>
        </member>
        <member name="M:B2.Com.clsSpread.setSpreadColumInfo(FarPoint.Win.Spread.SheetView,System.Collections.Generic.List{B2.Com.fspColumdata})">
            <summary>
            列情報に従い、列の属性をセットする。
            </summary>
            <param name="pspdObj"></param>
            <param name="listp"></param>
            <returns></returns>
        </member>
        <member name="M:B2.Com.clsSpread.SetColorAlternating(FarPoint.Win.Spread.SheetView)">
            <summary>
            奇数/偶数カラー設定
            </summary>
            <param name="pspdObj">スプレッドシートインスタンス</param>
            <returns>true：正常終了　false：エラー</returns>
        </member>
        <member name="M:B2.Com.clsSpread.setSpreadRowHeader(FarPoint.Win.Spread.SheetView)">
            <summary>
            行ヘッダーのサイズ、文字の設定　固定値
            </summary>
            <param name="pspdObj"></param>
        </member>
        <member name="M:B2.Com.clsSpread.SetRowsHeight(FarPoint.Win.Spread.SheetView)">
            <summary>
            行の高さを揃える
            </summary>
            <param name="pspdObj"></param>
            <returns></returns>
        </member>
        <member name="M:B2.Com.clsSpread.SetFrozenColumn(FarPoint.Win.Spread.SheetView,System.Int32)">
            <summary>
            列を固定する
            </summary>
            <param name="pspdObj"></param>
            <param name="ColumnCount"></param>
            <returns></returns>
        </member>
        <member name="M:B2.Com.clsSpread.SetCellFocus(FarPoint.Win.Spread.FpSpread,System.Int32,System.Int32)">
            <summary>
            フォーカス設定処理
            </summary>
            <param name="pspdObj">スプレッドシートインスタンス</param>
            <param name="pintRow">行位置</param>
            <param name="pintCol">列位置</param>
            <returns>true：正常終了　false：エラー</returns>
            <remark>
            フォーカス設定を行います
            </remark>
        </member>
        <member name="M:B2.Com.clsSpread.InitDispInputMap(FarPoint.Win.Spread.FpSpread)">
            <summary>
            スプレッド標準キー 無効処理(表示用)
            </summary>
            <param name="pspdObj">スプレッドシートインスタンス</param>
            <returns>true：正常終了　false：エラー</returns>
            <remark>
            各起動時に実行してください。
            TAB：フォーカス移動用にします
            ESC：通常画面の終了に使用します など
            
            ※　スプレッド読み取り専用の場合必要なし(OperationModeの設定だけ)
            　　標準でキーを取得したい場合に使用します
            </remark>
        </member>
        <member name="M:B2.Com.clsSpread.InitRenzokuInput(FarPoint.Win.Spread.FpSpread)">
            <summary>
            スプレッド連続入力設定処理
            </summary>
            <param name="pspdObj">スプレッドシートインスタンス</param>
            <returns>true：正常終了　false：エラー</returns>
            <remark>
            連続入力用初期処理を行います
            </remark>
        </member>
        <member name="M:B2.Com.clsSpread.InitNormalInput(FarPoint.Win.Spread.FpSpread,System.Object)">
            <summary>
            スプレッド通常入力設定処理
            </summary>
            <param name="pspdObj">スプレッドシートインスタンス</param>
            <param name="EnterAction">Enterキー入力時の動作</param>
            <returns>true：正常終了　false：エラー</returns>
            <remark>
            通常入力用初期処理を行います
            </remark>
        </member>
        <member name="M:B2.Com.clsSpread.clearSpreadSheet(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SheetView)">
            <summary>
            スプレッドクリア処理
            </summary>
            <param name="pspdObj">スプレッドシートインスタンス</param>
            <returns>true：正常終了　false：エラー</returns>
            <remark>
            初期化を行います
            </remark>
        </member>
        <member name="M:B2.Com.clsSpread.CheckSheetViewColumns(FarPoint.Win.Spread.Column)">
            <summary>
            対象カラム出力有無確認
            </summary>
            <param name="pobjColumn">対象カラム情報</param>
            <returns>true:出力あり false:出力なし</returns>
        </member>
        <member name="M:B2.Com.clsSpread.SheetViewToCsv(FarPoint.Win.Spread.SheetView)">
            <summary>
            SheetView→CSV出力文字変換
            </summary>
            <param name="lobjSheetView">DataTable</param>
            <returns>CSV出力文字</returns>
        </member>
        <member name="M:B2.Com.clsSpread.SheetViewToCsv(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            SheetView→CSV出力文字変換
            </summary>
            <param name="Sheet1">アクティブなシート</param>
            <param name="st_row">出力開始行</param>
            <param name="st_colum">出力開始列</param>
            <param name="end_row">出力終了行</param>
            <param name="end_colum">出力終了列</param>
            <returns>CSV出力文字</returns>
        </member>
        <member name="M:B2.Com.clsSpread.mfnc_ToString(System.Object)">
            <summary>
            文字変換
            </summary>
            <remarks>
            null等、変換に例外が発生する場合は""とする
            </remarks>
            <param name="pobjData">変換前データ</param>
            <returns>文字列</returns>
        </member>
        <member name="M:B2.Com.clsSpread.mfnc_EncloseDoubleQuotesIfNeed(System.String)">
            <summary>
            必要ならば、文字列をダブルクォートで囲む
            </summary>
            <param name="pstrField">対象文字列</param>
            <returns>変換後文字列</returns>
        </member>
        <member name="M:B2.Com.clsSpread.mfnc_EncloseDoubleQuotes(System.String)">
            <summary>
            文字列をダブルクォートで囲む
            </summary>
            <param name="pstrField">対象文字列</param>
            <returns>変換後文字列</returns>
        </member>
        <member name="M:B2.Com.clsSpread.mfnc_NeedEncloseDoubleQuotes(System.String)">
            <summary>
            文字列をダブルクォートで囲む必要があるか調べる
            </summary>
            <param name="pstrField">対象文字列</param>
            <returns>true:必要 false:不要</returns>
        </member>
        <member name="T:B2.Com.Str">
            <summary>
            指定された文字数分の文字列型 (String) を返します。
            </summary>
        </member>
        <member name="M:B2.Com.Str.Spaces(System.Int32)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定したバイト数分のスペース文字列を返します。</summary>
            <param name="iByteSize">
                スペースを埋めるバイト数。</param>
            <returns>
                指定されたバイト数分のスペース文字列。</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Str.FileStrings(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定したファイルを行単位の配列にします。</summary>
            <param name="stFilename">
                読み込むファイル</param>
            <returns>
                行単位の配列を返します。</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Str.StringBukatuB(System.String,System.Int32,System.Boolean)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定した文字列を指定バイト数にて分割します。</summary>
            <param name="pstrMoji">
                指定文字列(半角混在可)</param>
            <param name="pintLengthB">
                指定バイト文字数</param> 
            <param name="pblnDelNewLine">
                改行コード分割フラグ(TRUE:分割あり、False：分割しない)</param> 
            <returns>
                分割配列にて戻します。分解できなかった場合は配列数1で空白文字を返します。</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Str.DelNewLine(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定した文字列の改行コードを削除します。</summary>
            <param name="pstrMoji">
                指定文字列(半角混在可)</param>
            <returns>
                指定文字列から改行コードを削除した文字列を戻します。</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="T:B2.Com.Ans">
            <summary>
            指定された文字数分の文字列型 (String) を返します。
            </summary>
        </member>
        <member name="F:B2.Com.Ans.enc">
            <summary>
            バイト数をカウントするために使用するShift_JISエンコード</summary>
        </member>
        <member name="M:B2.Com.Ans.AnsLenB(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                文字列のバイト長を返します。</summary>
            <param name="str">
                バイト長を取り出す元になる文字列。</param>
            <returns>
                文字列のバイト長。</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsLeftB(System.String,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の左端から指定された文字数分の文字列を返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iByteSize">
                取り出す文字数。</param>
            <returns>
                左端から指定された文字数分の文字列。
                文字数を超えた場合は、文字列全体が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsMidB(System.String,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の指定された位置以降のすべての文字列を返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iStart">
                取り出しを開始する位置。</param>
            <returns>
                指定された位置以降のすべての文字列。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsMidB(System.String,System.Int32,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の指定された位置から、指定された文字数分の文字列を返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iStart">
                取り出しを開始する位置。</param>
            <param name="iByteSize">
                取り出す文字数。</param>
            <returns>
                指定された位置から指定された文字数分の文字列。
                文字数を超えた場合は、指定された位置からすべての文字列が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsRightB(System.String,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の右端から指定された文字数分の文字列を返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iByteSize">
                取り出す文字数。</param>
            <returns>
                右端から指定された文字数分の文字列。
                文字数を超えた場合は、文字列全体が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsLeftC(System.String,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の左端から指定された文字数分の文字列を返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iByteSize">
                取り出す文字数。</param>
            <returns>
                左端から指定された文字数分の文字列。
                文字数を超えた場合は、文字列全体が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsLeftC(System.String,System.Int32,System.Int32@)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の左端から指定された文字数分の文字列を返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iByteSize">
                取り出す文字数。</param>
            <param name="oByteSize">
                取り出した文字のバイト数。</param>
            <returns>
                左端から指定された文字数分の文字列。
                文字数を超えた場合は、文字列全体が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsMidC(System.String,System.Int32,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の指定された位置から、指定された文字数分の文字列を返します。
                ※日本語文字を分断された場合は手前の文字列まで返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iStart">
                取り出しを開始する位置。</param>
            <param name="iByteSize">
                取り出す文字数。</param>
            <returns>
                指定された位置から指定された文字数分の文字列。
                文字数を超えた場合は、指定された位置からすべての文字列が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsMidC(System.String,System.Int32,System.Int32,System.Int32@)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の指定された位置から、指定された文字数分の文字列を返します。
                ※日本語文字を分断された場合は手前の文字列まで返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iStart">
                取り出しを開始する位置。</param>
            <param name="iByteSize">
                取り出す文字数。</param>
            <param name="oByteSize">
                取り出した文字のバイト数。</param>
            <returns>
                指定された位置から指定された文字数分の文字列。
                文字数を超えた場合は、指定された位置からすべての文字列が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsCheck2(System.Byte[]@,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                Shift JISにエンコードされたバイト配列の指定された位置のコードが日本語文字１バイト目であるかどうかチェックします
                追加080829（AnsMidCメソッド専用）</summary>
            <param name="bShiftJis">
                Shift JISにエンコードされたバイト配列。</param>
            <param name="iPos">
                チェックするバイト配列の位置。</param>
            <returns>
                true : 日本語文字でないか、日本語文字２バイト目である  false : 日本語文字１バイト目である</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsCheck(System.String)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列中に日本語文字が混在しているかチェックします</summary>
            <param name="stTarget">
                対象文字列。</param>
            <returns>
                true : 混在していない  false : 混在している</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsLeft(System.String,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の左端から指定された文字数分の文字列を返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iMojiSize">
                取り出す文字数。</param>
            <returns>
                左端から指定された文字数分の文字列。
                文字数を超えた場合は、文字列全体が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Ans.AnsMid(System.String,System.Int32,System.Int32)">
            -----------------------------------------------------------------------------------
            <summary>
                文字列の指定された位置から、指定された文字数分の文字列を返します。</summary>
            <param name="stTarget">
                取り出す元になる文字列。</param>
            <param name="iStart">
                取り出しを開始する位置。</param>
            <param name="iMojiSize">
                取り出す文字数。</param>
            <returns>
                指定された位置から指定された文字数分の文字列。
                文字数を超えた場合は、指定された位置からすべての文字列が返されます。</returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="T:B2.Com.StrConv">
            <summary>
            指定に従って変換された文字列型 (String) の値を返します。
            </summary>
        </member>
        <member name="F:B2.Com.StrConv.LCMAP_LOWERCASE">
            <summary>
            マッピング定数</summary>        
        </member>
        <member name="M:B2.Com.StrConv.LCMapStringA(System.Int32,System.Int32,System.String,System.Int32,System.Text.StringBuilder,System.Int32)">
            <summary>
            LCMapStringA ある文字列を別の文字列にマップする。</summary>        
        </member>
        <member name="M:B2.Com.StrConv.GetSystemDefaultLCID">
            <summary>
            GetSystemDefaultLCID ロケール識別子を取得</summary>        
        </member>
        <member name="F:B2.Com.StrConv.enc">
            <summary>
            バイト数をカウントするために使用するShift_JISエンコード</summary>
        </member>
        <member name="M:B2.Com.StrConv.ToNarrow(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                文字列内の全角文字 (2 バイト) を半角文字 (1 バイト) に変換します。</summary>
            <param name="str">
                変換元の文字列</param>
            <returns>
                変換後の文字列</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.StrConv.ToWide(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                文字列内の半角文字 (1 バイト) を全角文字 (2 バイト) に変換します。</summary>
            <param name="str">
                変換元の文字列</param>
            <returns>
                変換後の文字列</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.StrConv.ToUpperCase(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                文字列を大文字に変換します。</summary>
            <param name="str">
                変換元の文字列</param>
            <returns>
                変換後の文字列</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.StrConv.ToLowerCase(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                文字列を小文字に変換します。</summary>
            <param name="str">
                変換元の文字列</param>
            <returns>
                変換後の文字列</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.StrConv.ToKatakana(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                文字列内のひらがなをカタカナに変換します。</summary>
            <param name="str">
                変換元の文字列</param>
            <returns>
                変換後の文字列</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.StrConv.ToHiragana(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                文字列内のカタカナをひらがなに変換します。</summary>
            <param name="str">
                変換元の文字列</param>
            <returns>
                変換後の文字列</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="T:B2.Com.Chk">
            <summary>
            指定された値チェックを行います
            </summary>
        </member>
        <member name="M:B2.Com.Chk.IsIntNumber(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定文字列の整数チェック</summary>
            <param name="pstrNumber">
                チェック文字列</param>
            <returns>
                指定文字列の整数チェックを行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Chk.IsPostNo(System.String,System.Int32)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定文字列の郵便番号(半角)チェック</summary>
            <param name="pstrPostNo">
                チェック文字列</param>
            <param name="pintMaxLenB">
                全バイト数</param>
            <returns>
                指定文字列の郵便番号チェックを行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Chk.IsWideString(System.String,System.Int32)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定文字列の全角チェック（文字数チェックあり）</summary>
            <param name="pstrTarget">
                チェック文字列</param>
            <param name="pintMaxLenB">
                全バイト数</param>
            <returns>
                指定文字列の全角チェックを行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Chk.IsWideString(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定文字列の全角チェック（文字数チェックなし）</summary>
            <param name="pstrTarget">
                チェック文字列</param>
            <returns>
                指定文字列の全角チェックを行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Chk.IsLenB(System.String,System.Int32)">
            -----------------------------------------------------------------------------------------
            <summary>
                指定文字列のバイトチェック</summary>
            <param name="pstrChk">
                チェック文字列</param>
            <param name="pintLenB">チェック文字数</param>
            <returns>
                指定文字列のバイト数日付チェックを行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="T:B2.Com.Conv">
            <summary>
            各変換をnullチェック、""チェック後に実行します
            </summary>
        </member>
        <member name="M:B2.Com.Conv.ToInt(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                int型変換処理</summary>
            <param name="pstrData">
                (I)変換前文字列</param>
            <returns>
                チェック後int型変換を行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Conv.ToInt(System.Object)">
            -----------------------------------------------------------------------------------------
            <summary>
                int型変換処理</summary>
            <param name="pobjData">
                (I)変換前オブジェクト</param>
            <returns>
                チェック後int型変換を行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Conv.ToBool(System.String)">
            -----------------------------------------------------------------------------------------
            <summary>
                boolt型変換処理</summary>
            <param name="pstrData">
                (I)変換前文字列</param>
            <returns>
                チェック後bool型変換を行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:B2.Com.Conv.ToString(System.Object)">
            -----------------------------------------------------------------------------------------
            <summary>
                string型変換処理</summary>
            <param name="lobjData">
                (I)変換前オブジェクト</param>
            <returns>
                チェック後bool型変換を行います</returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="T:B2.Com.ctlComboBoxGc">
            <summary>
            取引先コンボボックスコントロール
            </summary>
        </member>
        <member name="F:B2.Com.ctlComboBoxGc.CODE_NONE">
            <summary>非選択時コード</summary>
        </member>
        <member name="F:B2.Com.ctlComboBoxGc.b2Com">
            <summary>上位からの共通パラメータ</summary>
        </member>
        <member name="F:B2.Com.ctlComboBoxGc.dS_Combo">
            <summary>コンボボックス用データセット</summary>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.#ctor(System.ComponentModel.IContainer)">
            <summary>
            コンストラクタ
            </summary>
            <param name="container">コンテナー</param>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.Init(B2.Com.clsB2Com,System.String,System.String,System.String)">
            <summary>
            初期化処理
            </summary>
            <param name="PHCommon">共通モジュール</param>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.getCode">
            <summary>
            コード取得
            </summary>
            <returns>コード</returns>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.getCode(System.Int32)">
            <summary>
            コード取得
            </summary>
            <param name="pintINDEX">インデックス値</param>
            <returns>コード</returns>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.getIndex(System.String)">
            <summary>
            インデックス値取得
            </summary>
            <param name="pstrCODE">コード</param>
            <returns>インデックス値</returns>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.getData(System.String)">
            <summary>
            データ取得
            </summary>
            <param name="pstrColumnName">項目名称</param>
            <returns>データ</returns>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.getData(System.Int32,System.String)">
            <summary>
            データ取得
            </summary>
            <param name="pintINDEX">インデックス値</param>
            <param name="pstrColumnName">項目名称</param>
            <returns>データ</returns>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.mfnc_getComboDs">
            <summary>
            発注先コンボボックス：DBデータ取得
            </summary>
        </member>
        <member name="F:B2.Com.ctlComboBoxGc.components">
            <summary> 
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:B2.Com.ctlComboBoxGc.InitializeComponent">
            <summary> 
            デザイナー サポートに必要なメソッドです。このメソッドの内容を 
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="T:B2.Com.ctlWebBrowser">
            <summary>
            ファイル閲覧コントロール
            </summary>
        </member>
        <member name="M:B2.Com.ctlWebBrowser.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:B2.Com.ctlWebBrowser.ViewFile(System.String)">
            <summary>
            ファイルプレビュー表示
            </summary>
            <param name="pstrFileName">ファイル名</param>
            <returns>true:正常 false:異常</returns>
        </member>
        <member name="M:B2.Com.ctlWebBrowser.mfnc_IsTextFile(System.String)">
            <summary>
            テキストファイル確認
            </summary>
            <param name="pstrFileName">ファイル名</param>
            <returns>true:テキストファイル false:バイナリファイル</returns>
        </member>
        <member name="F:B2.Com.ctlWebBrowser.components">
            <summary> 
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:B2.Com.ctlWebBrowser.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:B2.Com.ctlWebBrowser.InitializeComponent">
            <summary> 
            デザイナー サポートに必要なメソッドです。このメソッドの内容を 
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="P:B2.Com.ctlWebBrowser.ViewFileName">
            <summary>プレビューファイル名</summary>
        </member>
        <member name="P:B2.Com.ctlWebBrowser.ForeColor_SM">
            <summary>文字色</summary>
        </member>
        <member name="P:B2.Com.ctlWebBrowser.BackColor_SM">
            <summary>背景色</summary>
        </member>
        <member name="F:B2.Com.frmInputBox.mblnOkSelect">
            <summary> OK選択情報 </summary>
        </member>
        <member name="F:B2.Com.frmInputBox.labeltext">
            <summary> ラベル情報 </summary>
        </member>
        <member name="F:B2.Com.frmInputBox.InText">
            <summary> OK選択情報 </summary>
        </member>
        <member name="F:B2.Com.frmInputBox.components">
            <summary>
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:B2.Com.frmInputBox.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:B2.Com.frmInputBox.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="F:B2.Com.frmSelectData.gstrRes">
            <summary> </summary>
        </member>
        <member name="F:B2.Com.frmSelectData.gintRowCount">
            <summary> </summary>
        </member>
        <member name="F:B2.Com.frmSelectData.b2Com">
            <summary> PHARMAコモンオブジェクト </summary>
        </member>
        <member name="F:B2.Com.frmSelectData.mblnFilter">
            <summary> フィルターフラグ </summary>
        </member>
        <member name="M:B2.Com.frmSelectData.#ctor(B2.Com.clsB2Com)">
            <summary>
            コンストラクタ
            </summary>
            <param name="pPhCom">PHARMAコモンオブジェクト</param>
        </member>
        <member name="M:B2.Com.frmSelectData.#ctor(B2.Com.clsB2Com,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="pPhCom">PHARMAコモンオブジェクト</param>
            <param name="pblnFilter">フィルターフラグ</param>
        </member>
        <member name="M:B2.Com.frmSelectData.frmSelData_(B2.Com.clsB2Com,System.Boolean)">
            <summary>
            コンストラクタ実処理
            </summary>
            <param name="pPhCom">PHARMAコモンオブジェクト</param>
            <param name="pblnFilter">フィルターフラグ</param>
        </member>
        <member name="M:B2.Com.frmSelectData.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            キャンセルボタン選択時処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks>画面を終了します</remarks>
        </member>
        <member name="M:B2.Com.frmSelectData.btnOk_Click(System.Object,System.EventArgs)">
            <summary>
            選択決定ボタン選択時処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks>選択したコースのコードを取得し画面を終了します</remarks>
        </member>
        <member name="M:B2.Com.frmSelectData.spdCosList_CellDoubleClick(System.Object,FarPoint.Win.Spread.CellClickEventArgs)">
            <summary>
            一覧ダブルクリック時処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks>選択決定ボタンをクリックした時と同等の処理を行います</remarks>
        </member>
        <member name="M:B2.Com.frmSelectData.spdList_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            一覧KeyDown時処理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks>選択決定ボタンをクリックした時と同等の処理を行います</remarks>
        </member>
        <member name="M:B2.Com.frmSelectData.btnReView_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:B2.Com.frmSelectData.mfncClearScreen">
            <summary>
            画面クリア処理
            </summary>
            <returns>成否</returns>
            <remarks>画面をクリアします</remarks>
        </member>
        <member name="M:B2.Com.frmSelectData.mfncDispData">
            <summary>
            一覧表示処理
            </summary>
            <returns>成否</returns>
            <remarks>コースの一覧を表示します</remarks>
        </member>
        <member name="M:B2.Com.frmSelectData.mfncInit">
            <summary>
            画面初期化処理
            </summary>
            <returns>成否</returns>
            <remarks>画面を初期化します</remarks>
        </member>
        <member name="M:B2.Com.frmSelectData.mfncDispFilter">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:B2.Com.frmSelectData.mfncDispReView">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:B2.Com.frmSelectData.components">
            <summary>
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:B2.Com.frmSelectData.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:B2.Com.frmSelectData.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="P:B2.Com.frmSelectData.Title">
            <summary>
            フォームのタイトル
            </summary>
        </member>
        <member name="F:B2.Com.frmShowMessage.msgTitle">
            <summary>タイトル</summary>
        </member>
        <member name="F:B2.Com.frmShowMessage.msgString">
            <summary>メッセージ</summary>
        </member>
        <member name="F:B2.Com.frmShowMessage.msgIcon">
            <summary>アイコン</summary>
        </member>
        <member name="M:B2.Com.frmShowMessage.#ctor(System.String,System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            コンストラクタ
            </summary>
            <param name="title">タイトル</param>
            <param name="message">メッセージ</param>
            <param name="icon">アイコン</param>
        </member>
        <member name="M:B2.Com.frmShowMessage.ShowMessage_Load(System.Object,System.EventArgs)">
            <summary>
            フォームロード
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:B2.Com.frmShowMessage.btnOk_Click(System.Object,System.EventArgs)">
            <summary>
            ＯＫボタンクリック
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:B2.Com.frmShowMessage.GetIconImage">
            <summary>
            アイコンイメージ取得
            </summary>
            <returns>アイコンイメージ</returns>
        </member>
        <member name="F:B2.Com.frmShowMessage.components">
            <summary>
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:B2.Com.frmShowMessage.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>
        </member>
        <member name="M:B2.Com.frmShowMessage.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を
            コード エディタで変更しないでください。
            </summary>
        </member>
    </members>
</doc>
